{"ast":null,"code":"var trunc = require('../internals/math-trunc'); // `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\n\n\nmodule.exports = function (argument) {\n  var number = +argument; // eslint-disable-next-line no-self-compare -- NaN check\n\n  return number !== number || number === 0 ? 0 : trunc(number);\n};","map":{"version":3,"names":["trunc","require","module","exports","argument","number"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/node_modules/core-js-pure/internals/to-integer-or-infinity.js"],"sourcesContent":["var trunc = require('../internals/math-trunc');\r\n\r\n// `ToIntegerOrInfinity` abstract operation\r\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\r\nmodule.exports = function (argument) {\r\n  var number = +argument;\r\n  // eslint-disable-next-line no-self-compare -- NaN check\r\n  return number !== number || number === 0 ? 0 : trunc(number);\r\n};\r\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,yBAAD,CAAnB,C,CAEA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,QAAV,EAAoB;EACnC,IAAIC,MAAM,GAAG,CAACD,QAAd,CADmC,CAEnC;;EACA,OAAOC,MAAM,KAAKA,MAAX,IAAqBA,MAAM,KAAK,CAAhC,GAAoC,CAApC,GAAwCL,KAAK,CAACK,MAAD,CAApD;AACD,CAJD"},"metadata":{},"sourceType":"script"}