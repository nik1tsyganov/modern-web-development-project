{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brosk\\\\Documents\\\\Web Dev\\\\modern-web-development-project\\\\project\\\\src\\\\Components\\\\Score\\\\ScoreView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TestResponse } from \"../../Common/Services/TestService\";\nimport { createUserScore } from \"../../Common/Services/ScoreService\";\nimport { UpdateScore } from \"../../Common/Services/UpdateScore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScoreView = () => {\n  _s();\n\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    Promise.all([TestResponse(\"authors\"), TestResponse(\"artists\"), TestResponse(\"historicals\")]).then(results => {\n      console.log(results);\n      let artistsScore = results.filter(result => result.attributes.category === \"artists\");\n      let authorsScore = results.filter(result => result.attributes.category === \"authors\");\n      let historicalsScore = results.filter(result => result.attributes.category === \"historicals\");\n      let scoreTot = 0;\n\n      if (artistsScore[0].attributes.response === \"Vincent Van Gogh\") {\n        scoreTot += 1;\n      }\n\n      if (authorsScore[0].attributes.response === \"Hunter S. Thompson\") {\n        scoreTot += 1;\n      }\n\n      if (historicalsScore[0].attributes.response === \"Agamemnon\") {\n        scoreTot += 1;\n      }\n\n      setScore(scoreTot);\n      console.log(\"scoreTot\");\n      console.log(scoreTot);\n      UpdateScore(scoreTot).then(result => {\n        console.log(result);\n      });\n      return createUserScore(scoreTot).then(userScore => {\n        console.log(\"userScore\");\n        console.log(userScore);\n        return userScore;\n      });\n    });\n  }, []); // useEffect(() => {\n  //     //console.log(\"heeby\")\n  //     //console.log(scores)\n  //     let sum = 0\n  //     for (let i = 0; i < \n  //         scores.length; i += 1) {\n  //         sum += scores[i]\n  //     }\n  //     setScoreTot([scoreTot, sum])\n  //     createUserScore().then((result) => {\n  //         console.log(result)\n  //   });\n  // }, [scores]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"head\",\n      children: \"Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ScoreView, \"6LqkIJiaorzg0taiAgz78FTgEiM=\");\n\n_c = ScoreView;\nexport default ScoreView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScoreView\");","map":{"version":3,"names":["React","useEffect","useState","TestResponse","createUserScore","UpdateScore","ScoreView","score","setScore","Promise","all","then","results","console","log","artistsScore","filter","result","attributes","category","authorsScore","historicalsScore","scoreTot","response","userScore"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/src/Components/Score/ScoreView.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TestResponse\r\n} from \"../../Common/Services/TestService\";\r\nimport {\r\n    createUserScore\r\n} from \"../../Common/Services/ScoreService\";\r\nimport {\r\n    UpdateScore\r\n} from \"../../Common/Services/UpdateScore\";\r\n\r\nconst ScoreView = () => {\r\n\r\n        const [score, setScore] = useState(0);\r\n\r\n        useEffect(() => {\r\n    \r\n            Promise.all([TestResponse(\"authors\"), TestResponse(\"artists\"), TestResponse(\"historicals\")]).then((results) => {\r\n                console.log(results)\r\n\r\n\r\n                let artistsScore = results.filter(result => result.attributes.category === \"artists\")\r\n                let authorsScore = results.filter(result => result.attributes.category === \"authors\")\r\n                let historicalsScore = results.filter(result => result.attributes.category === \"historicals\")\r\n\r\n                let scoreTot = 0;\r\n                if (artistsScore[0].attributes.response === \"Vincent Van Gogh\"){\r\n                    scoreTot += 1;\r\n                }\r\n                if (authorsScore[0].attributes.response === \"Hunter S. Thompson\"){\r\n                    scoreTot += 1;\r\n                }\r\n                if (historicalsScore[0].attributes.response === \"Agamemnon\"){\r\n                    scoreTot += 1;\r\n                }\r\n\r\n                setScore(scoreTot)\r\n\r\n                console.log(\"scoreTot\")\r\n                console.log(scoreTot)\r\n\r\n                UpdateScore(scoreTot).then((result) => {\r\n                    console.log(result)\r\n                });\r\n\r\n                return createUserScore(scoreTot).then((userScore) => {\r\n                    console.log(\"userScore\")\r\n                    console.log(userScore)\r\n                    return userScore\r\n                });\r\n            });\r\n    \r\n        }, []);\r\n      \r\n    \r\n        // useEffect(() => {\r\n        //     //console.log(\"heeby\")\r\n        //     //console.log(scores)\r\n        //     let sum = 0\r\n    \r\n        //     for (let i = 0; i < \r\n        //         scores.length; i += 1) {\r\n        //         sum += scores[i]\r\n        //     }\r\n    \r\n        //     setScoreTot([scoreTot, sum])\r\n    \r\n        //     createUserScore().then((result) => {\r\n        //         console.log(result)\r\n        //   });\r\n        // }, [scores]);\r\n      \r\n        return (\r\n        <div>\r\n            <h1 className=\"head\">Score</h1>\r\n            <h1>{score}</h1>\r\n        </div>\r\n        );\r\n      };\r\n      \r\n      export default ScoreView;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,YADF,QAEO,mCAFP;AAGA,SACIC,eADJ,QAEO,oCAFP;AAGA,SACIC,WADJ,QAEO,mCAFP;;;AAIA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEhB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IAEZQ,OAAO,CAACC,GAAR,CAAY,CAACP,YAAY,CAAC,SAAD,CAAb,EAA0BA,YAAY,CAAC,SAAD,CAAtC,EAAmDA,YAAY,CAAC,aAAD,CAA/D,CAAZ,EAA6FQ,IAA7F,CAAmGC,OAAD,IAAa;MAC3GC,OAAO,CAACC,GAAR,CAAYF,OAAZ;MAGA,IAAIG,YAAY,GAAGH,OAAO,CAACI,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,UAAP,CAAkBC,QAAlB,KAA+B,SAAxD,CAAnB;MACA,IAAIC,YAAY,GAAGR,OAAO,CAACI,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,UAAP,CAAkBC,QAAlB,KAA+B,SAAxD,CAAnB;MACA,IAAIE,gBAAgB,GAAGT,OAAO,CAACI,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,UAAP,CAAkBC,QAAlB,KAA+B,aAAxD,CAAvB;MAEA,IAAIG,QAAQ,GAAG,CAAf;;MACA,IAAIP,YAAY,CAAC,CAAD,CAAZ,CAAgBG,UAAhB,CAA2BK,QAA3B,KAAwC,kBAA5C,EAA+D;QAC3DD,QAAQ,IAAI,CAAZ;MACH;;MACD,IAAIF,YAAY,CAAC,CAAD,CAAZ,CAAgBF,UAAhB,CAA2BK,QAA3B,KAAwC,oBAA5C,EAAiE;QAC7DD,QAAQ,IAAI,CAAZ;MACH;;MACD,IAAID,gBAAgB,CAAC,CAAD,CAAhB,CAAoBH,UAApB,CAA+BK,QAA/B,KAA4C,WAAhD,EAA4D;QACxDD,QAAQ,IAAI,CAAZ;MACH;;MAEDd,QAAQ,CAACc,QAAD,CAAR;MAEAT,OAAO,CAACC,GAAR,CAAY,UAAZ;MACAD,OAAO,CAACC,GAAR,CAAYQ,QAAZ;MAEAjB,WAAW,CAACiB,QAAD,CAAX,CAAsBX,IAAtB,CAA4BM,MAAD,IAAY;QACnCJ,OAAO,CAACC,GAAR,CAAYG,MAAZ;MACH,CAFD;MAIA,OAAOb,eAAe,CAACkB,QAAD,CAAf,CAA0BX,IAA1B,CAAgCa,SAAD,IAAe;QACjDX,OAAO,CAACC,GAAR,CAAY,WAAZ;QACAD,OAAO,CAACC,GAAR,CAAYU,SAAZ;QACA,OAAOA,SAAP;MACH,CAJM,CAAP;IAKH,CAjCD;EAmCH,CArCQ,EAqCN,EArCM,CAAT,CAJgB,CA4ChB;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;;EAEA,oBACA;IAAA,wBACI;MAAI,SAAS,EAAC,MAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAKjB;IAAL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AAMD,CAnEP;;GAAMD,S;;KAAAA,S;AAqEA,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}