{"ast":null,"code":"import Parse from 'parse';\nexport var TestResponse = function TestResponse(category) {\n  var currentUser = Parse.User.current();\n  var username = currentUser.attributes.username;\n  var testResponse = Parse.Object.extend(\"UserResponse\");\n  var query = new Parse.Query(testResponse);\n  query.equalTo('user', username);\n  query.equalTo('category', category);\n  return query.first().then(function (results) {\n    if (results) {\n      results.destroy({});\n    }\n\n    return results;\n  });\n};","map":{"version":3,"names":["Parse","TestResponse","category","currentUser","User","current","username","attributes","testResponse","Object","extend","query","Query","equalTo","first","then","results","destroy"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/src/Common/Services/TestService.js"],"sourcesContent":["import Parse from 'parse';\r\n\r\n  export const TestResponse = (category) => {\r\n\r\n    var currentUser = Parse.User.current();\r\n    var username = currentUser.attributes.username;\r\n\r\n    const testResponse = Parse.Object.extend(\"UserResponse\");\r\n    const query = new Parse.Query(testResponse);\r\n\r\n    query.equalTo('user', username);\r\n    query.equalTo('category', category);\r\n\r\n    return query.first().then((results) => {\r\n      if (results){\r\n        results.destroy({})\r\n      }\r\n        return results;\r\n});\r\n};"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEE,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAc;EAExC,IAAIC,WAAW,GAAGH,KAAK,CAACI,IAAN,CAAWC,OAAX,EAAlB;EACA,IAAIC,QAAQ,GAAGH,WAAW,CAACI,UAAZ,CAAuBD,QAAtC;EAEA,IAAME,YAAY,GAAGR,KAAK,CAACS,MAAN,CAAaC,MAAb,CAAoB,cAApB,CAArB;EACA,IAAMC,KAAK,GAAG,IAAIX,KAAK,CAACY,KAAV,CAAgBJ,YAAhB,CAAd;EAEAG,KAAK,CAACE,OAAN,CAAc,MAAd,EAAsBP,QAAtB;EACAK,KAAK,CAACE,OAAN,CAAc,UAAd,EAA0BX,QAA1B;EAEA,OAAOS,KAAK,CAACG,KAAN,GAAcC,IAAd,CAAmB,UAACC,OAAD,EAAa;IACrC,IAAIA,OAAJ,EAAY;MACVA,OAAO,CAACC,OAAR,CAAgB,EAAhB;IACD;;IACC,OAAOD,OAAP;EACP,CALU,CAAP;AAMH,CAjBQ"},"metadata":{},"sourceType":"module"}