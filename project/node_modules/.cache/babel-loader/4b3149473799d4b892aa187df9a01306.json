{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\brosk\\\\Documents\\\\Web Dev\\\\modern-web-development-project\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brosk\\\\Documents\\\\Web Dev\\\\modern-web-development-project\\\\project\\\\src\\\\Components\\\\Comments\\\\CommentForm.js\";\n\nimport React, { useState } from \"react\";\nimport { Mention, MentionsInput } from \"react-mentions\";\n\nvar CommentForm = function CommentForm(_ref) {\n  var handleSubmit = _ref.handleSubmit,\n      submitLabel = _ref.submitLabel,\n      _ref$hasCancelButton = _ref.hasCancelButton,\n      hasCancelButton = _ref$hasCancelButton === void 0 ? false : _ref$hasCancelButton,\n      _ref$usersForMention = _ref.usersForMention,\n      usersForMention = _ref$usersForMention === void 0 ? [] : _ref$usersForMention,\n      handleCancel = _ref.handleCancel,\n      _ref$initialText = _ref.initialText,\n      initialText = _ref$initialText === void 0 ? \"\" : _ref$initialText;\n\n  // I wasn't able to figure out how to make the form stateless since the text value kept being udpated to a single letter each\n  // time as opposed to the whole word or string in the comment\n  var _useState = useState(initialText),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var isTextareaDisabled = text.length === 0; // This onSubmit function makes sure the correct handle is executed like addComment or updateComment\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    handleSubmit(text);\n    setText(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MentionsInput, {\n    className: \"comment-textarea\",\n    value: text,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    placeholder: \"Mention people using @\",\n    forceSuggestionsAboveCursor: true,\n    a11ySuggestionsListLabel: \"Suggested mentions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Mention, {\n    data: usersForMention,\n    trigger: \"@\",\n    markup: \"__display__ [__id__]\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"comment-button\",\n    disabled: isTextareaDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, submitLabel), hasCancelButton && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"comment-button comment-cancel-button\",\n    onClick: handleCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Cancel\"));\n};\n\nexport default CommentForm;","map":{"version":3,"names":["React","useState","Mention","MentionsInput","CommentForm","handleSubmit","submitLabel","hasCancelButton","usersForMention","handleCancel","initialText","text","setText","isTextareaDisabled","length","onSubmit","e","preventDefault","target","value"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/src/Components/Comments/CommentForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Mention, MentionsInput } from \"react-mentions\";\r\n\r\nconst CommentForm = ({\r\n  handleSubmit,\r\n  submitLabel,\r\n  hasCancelButton = false,\r\n  usersForMention = [],\r\n  handleCancel,\r\n  initialText = \"\",\r\n}) => {\r\n\r\n  // I wasn't able to figure out how to make the form stateless since the text value kept being udpated to a single letter each\r\n  // time as opposed to the whole word or string in the comment\r\n  const [text, setText] = useState(initialText);\r\n  const isTextareaDisabled = text.length === 0;\r\n\r\n  // This onSubmit function makes sure the correct handle is executed like addComment or updateComment\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleSubmit(text);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n\r\n      {/* This mentions module developed by the 3rd party allows us to implement the @ feature and look up existing usres\r\n      who can be referenced */}\r\n      <MentionsInput\r\n        className=\"comment-textarea\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder={\"Mention people using @\"}\r\n        forceSuggestionsAboveCursor={true}\r\n        a11ySuggestionsListLabel={\"Suggested mentions\"}\r\n      >\r\n        <Mention \r\n          data={usersForMention} \r\n          trigger=\"@\" \r\n          markup='__display__ [__id__]'\r\n        />\r\n      </MentionsInput>\r\n\r\n      {/* The comment button is only visible when there is some text enterred */}\r\n      <button className=\"comment-button\" disabled={isTextareaDisabled}>{submitLabel}</button>\r\n\r\n      {/* Cancel is only visible when the user is trying to edit the a comment */}\r\n      {hasCancelButton && (\r\n        <button\r\n          className=\"comment-button comment-cancel-button\"\r\n          onClick={handleCancel}\r\n        >Cancel\r\n        </button>\r\n\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CommentForm;"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,gBAAvC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAOd;EAAA,IANJC,YAMI,QANJA,YAMI;EAAA,IALJC,WAKI,QALJA,WAKI;EAAA,gCAJJC,eAII;EAAA,IAJJA,eAII,qCAJc,KAId;EAAA,gCAHJC,eAGI;EAAA,IAHJA,eAGI,qCAHc,EAGd;EAAA,IAFJC,YAEI,QAFJA,YAEI;EAAA,4BADJC,WACI;EAAA,IADJA,WACI,iCADU,EACV;;EAEJ;EACA;EAHI,gBAIoBT,QAAQ,CAACS,WAAD,CAJ5B;EAAA;EAAA,IAIGC,IAJH;EAAA,IAISC,OAJT;;EAKJ,IAAMC,kBAAkB,GAAGF,IAAI,CAACG,MAAL,KAAgB,CAA3C,CALI,CAOJ;;EACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;IACtBA,CAAC,CAACC,cAAF;IACAZ,YAAY,CAACM,IAAD,CAAZ;IACAC,OAAO,CAAC,EAAD,CAAP;EACD,CAJD;;EAMA,oBACE;IAAM,QAAQ,EAAEG,QAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAIE,oBAAC,aAAD;IACE,SAAS,EAAC,kBADZ;IAEE,KAAK,EAAEJ,IAFT;IAGE,QAAQ,EAAE,kBAACK,CAAD;MAAA,OAAOJ,OAAO,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd;IAAA,CAHZ;IAIE,WAAW,EAAE,wBAJf;IAKE,2BAA2B,EAAE,IAL/B;IAME,wBAAwB,EAAE,oBAN5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAQE,oBAAC,OAAD;IACE,IAAI,EAAEX,eADR;IAEE,OAAO,EAAC,GAFV;IAGE,MAAM,EAAC,sBAHT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARF,CAJF,eAoBE;IAAQ,SAAS,EAAC,gBAAlB;IAAmC,QAAQ,EAAEK,kBAA7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAkEP,WAAlE,CApBF,EAuBGC,eAAe,iBACd;IACE,SAAS,EAAC,sCADZ;IAEE,OAAO,EAAEE,YAFX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAxBJ,CADF;AAkCD,CAvDD;;AAyDA,eAAeL,WAAf"},"metadata":{},"sourceType":"module"}