{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brosk\\\\Documents\\\\Web Dev\\\\modern-web-development-project\\\\project\\\\src\\\\Components\\\\Comments\\\\Comment.js\";\nimport CommentForm from \"./CommentForm\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comment = _ref => {\n  let {\n    comment,\n    replies,\n    getReplies,\n    setActiveComment,\n    activeComment,\n    currentUser,\n    filteredIds = [],\n    reduxWord = \"\",\n    updateComment,\n    deleteComment,\n    addComment,\n    parentId = null,\n    usersForMention = [],\n    currentUserId\n  } = _ref;\n  const isEditing = activeComment && activeComment.id === comment.id && activeComment.type === \"editing\";\n  const isReplying = activeComment && activeComment.id === comment.id && activeComment.type === \"replying\";\n  const canDelete = currentUserId === comment.attributes.userId && replies.length === 0;\n  const canReply = Boolean(currentUserId);\n  const canEdit = currentUserId === comment.attributes.userId;\n  const replyId = parentId ? parentId : comment.id;\n  const createdAt = new Date(comment.attributes.createdAt).toLocaleDateString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-right-part\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-author\",\n          children: comment.attributes.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-text\",\n        children: comment.attributes.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 24\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(CommentForm, {\n        submitLabel: \"Update\",\n        hasCancelButton: true,\n        initialText: comment.attributes.body,\n        handleSubmit: text => updateComment(comment.id, text),\n        handleCancel: () => {\n          setActiveComment(null);\n        },\n        usersForMention: usersForMention,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-actions\",\n        children: [canReply && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-action\",\n          onClick: () => setActiveComment({\n            id: comment.id,\n            type: \"replying\"\n          }),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), canEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-action\",\n          onClick: () => setActiveComment({\n            id: comment.id,\n            type: \"editing\"\n          }),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), canDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-action\",\n          onClick: () => deleteComment(comment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), isReplying && /*#__PURE__*/_jsxDEV(CommentForm, {\n        submitLabel: \"Reply\",\n        handleSubmit: text => {\n          addComment(text, currentUser.id, replyId, currentUser.attributes.username);\n        },\n        usersForMention: usersForMention,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"replies\",\n        children: replies.map(reply => filteredIds.includes(reply.id) || reduxWord === \"\" ? /*#__PURE__*/_jsxDEV(Comment, {\n          comment: reply,\n          setActiveComment: setActiveComment,\n          activeComment: activeComment,\n          currentUser: currentUser,\n          filteredIds: filteredIds,\n          reduxWord: reduxWord,\n          updateComment: updateComment,\n          deleteComment: deleteComment,\n          addComment: addComment,\n          parentId: reply.id,\n          getReplies: getReplies,\n          replies: getReplies(reply.id),\n          usersForMention: usersForMention,\n          currentUserId: currentUserId\n        }, reply.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, comment.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["CommentForm","React","Comment","comment","replies","getReplies","setActiveComment","activeComment","currentUser","filteredIds","reduxWord","updateComment","deleteComment","addComment","parentId","usersForMention","currentUserId","isEditing","id","type","isReplying","canDelete","attributes","userId","length","canReply","Boolean","canEdit","replyId","createdAt","Date","toLocaleDateString","username","body","text","map","reply","includes"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/src/Components/Comments/Comment.js"],"sourcesContent":["import CommentForm from \"./CommentForm\";\r\nimport React from \"react\";\r\n\r\nconst Comment = ({\r\n  comment,\r\n  replies,\r\n  getReplies,\r\n  setActiveComment,\r\n  activeComment,\r\n  currentUser,\r\n  filteredIds = [],\r\n  reduxWord = \"\",\r\n  updateComment,\r\n  deleteComment,\r\n  addComment,\r\n  parentId = null,\r\n  usersForMention = [],\r\n  currentUserId\r\n}) => {\r\n\r\n  const isEditing =\r\n    activeComment &&\r\n    activeComment.id === comment.id &&\r\n    activeComment.type === \"editing\";\r\n\r\n  const isReplying =\r\n    activeComment &&\r\n    activeComment.id === comment.id &&\r\n    activeComment.type === \"replying\";\r\n\r\n  const canDelete = currentUserId === comment.attributes.userId && replies.length === 0;\r\n\r\n  const canReply = Boolean(currentUserId);\r\n\r\n  const canEdit = currentUserId === comment.attributes.userId;\r\n\r\n  const replyId = parentId ? parentId : comment.id;\r\n\r\n  const createdAt = new Date(comment.attributes.createdAt).toLocaleDateString();\r\n\r\n  return (\r\n    <div key={comment.id} className=\"comment\">\r\n      <div className=\"comment-right-part\">\r\n        <div className=\"comment-content\">\r\n          <div className=\"comment-author\">{comment.attributes.username}</div>\r\n          <div>{createdAt}</div>\r\n        </div>\r\n\r\n        {!isEditing && <div className=\"comment-text\">{comment.attributes.body}</div>}\r\n        \r\n        {isEditing && (\r\n          <CommentForm\r\n            submitLabel=\"Update\"\r\n            hasCancelButton\r\n            initialText={comment.attributes.body}\r\n            handleSubmit={(text) => updateComment(comment.id, text)}\r\n            handleCancel={() => {\r\n              setActiveComment(null);\r\n            }}\r\n            usersForMention={usersForMention}\r\n            currentUser={currentUser}\r\n          />\r\n        )}\r\n        <div className=\"comment-actions\">\r\n          {canReply && (\r\n            <div\r\n              className=\"comment-action\"\r\n              onClick={() =>\r\n                setActiveComment({ id: comment.id, type: \"replying\" })\r\n              }\r\n            >\r\n              Reply\r\n            </div>\r\n          )}\r\n          {canEdit && (\r\n            <div\r\n              className=\"comment-action\"\r\n              onClick={() =>\r\n                setActiveComment({ id: comment.id, type: \"editing\" })\r\n              }\r\n            >\r\n              Edit\r\n            </div>\r\n          )}\r\n          {canDelete && (\r\n            <div\r\n              className=\"comment-action\"\r\n              onClick={() => deleteComment(comment.id)}\r\n            >\r\n              Delete\r\n            </div>\r\n          )}\r\n        </div>\r\n        {isReplying && (\r\n          <CommentForm\r\n            submitLabel=\"Reply\"\r\n            handleSubmit={(text) => {addComment(text, currentUser.id, replyId, currentUser.attributes.username)}}\r\n            usersForMention={usersForMention}\r\n            currentUser={currentUser}\r\n          />\r\n        )}\r\n        {replies.length > 0 && (\r\n          <div className=\"replies\">\r\n            {replies.map((reply) => (\r\n              (filteredIds.includes(reply.id) || (reduxWord === \"\")) ? \r\n              <Comment\r\n                comment={reply}\r\n                key={reply.id}\r\n                setActiveComment={setActiveComment}\r\n                activeComment={activeComment}\r\n                currentUser={currentUser}\r\n                filteredIds={filteredIds}\r\n                reduxWord={reduxWord}\r\n                updateComment={updateComment}\r\n                deleteComment={deleteComment}\r\n                addComment={addComment}\r\n                parentId={reply.id}\r\n                getReplies={getReplies}\r\n                replies={getReplies(reply.id)}\r\n                usersForMention={usersForMention}\r\n                currentUserId={currentUserId}\r\n              />\r\n              : <></>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;"],"mappings":"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"},"metadata":{},"sourceType":"module"}