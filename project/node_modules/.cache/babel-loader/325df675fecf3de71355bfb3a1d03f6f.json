{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\brosk\\\\Documents\\\\Web Dev\\\\modern-web-development-project\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\brosk\\\\Documents\\\\Web Dev\\\\modern-web-development-project\\\\project\\\\src\\\\Components\\\\Score\\\\ScoreView.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { TestResponse } from \"../../Common/Services/TestService\";\nimport { createUserScore } from \"../../Common/Services/ScoreService\";\nimport { UpdateScore } from \"../../Common/Services/UpdateScore\";\n\nvar ScoreView = function ScoreView() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      score = _useState2[0],\n      setScore = _useState2[1];\n\n  useEffect(function () {\n    // calls and returns promises from service calls for each category\n    Promise.all([TestResponse(\"authors\"), TestResponse(\"artists\"), TestResponse(\"historicals\")]).then(function (results) {\n      console.log(results);\n\n      if (typeof results !== \"undefined\") {\n        // filters user response objects into categories\n        var artistsScore = results.filter(function (result) {\n          return result.attributes.category === \"artists\";\n        });\n        var authorsScore = results.filter(function (result) {\n          return result.attributes.category === \"authors\";\n        });\n        var historicalsScore = results.filter(function (result) {\n          return result.attributes.category === \"historicals\";\n        }); // calculates user score\n\n        var scoreTot = 0;\n\n        if (artistsScore[0].attributes.response === \"Vincent Van Gogh\") {\n          scoreTot += 1;\n        }\n\n        if (authorsScore[0].attributes.response === \"Hunter S. Thompson\") {\n          scoreTot += 1;\n        }\n\n        if (historicalsScore[0].attributes.response === \"Agamemnon\") {\n          scoreTot += 1;\n        }\n\n        setScore(scoreTot);\n        console.log(\"scoreTot\");\n        console.log(scoreTot); // calls service to update user score\n\n        UpdateScore(scoreTot).then(function (result) {\n          console.log(result);\n        }); // calls service to create new user score object\n\n        return createUserScore(scoreTot).then(function (userScore) {\n          console.log(\"userScore\");\n          console.log(userScore);\n          return userScore;\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"head\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Score\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, score));\n};\n\nexport default ScoreView;","map":{"version":3,"names":["React","useEffect","useState","TestResponse","createUserScore","UpdateScore","ScoreView","score","setScore","Promise","all","then","results","console","log","artistsScore","filter","result","attributes","category","authorsScore","historicalsScore","scoreTot","response","userScore"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/src/Components/Score/ScoreView.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  TestResponse\r\n} from \"../../Common/Services/TestService\";\r\nimport {\r\n    createUserScore\r\n} from \"../../Common/Services/ScoreService\";\r\nimport {\r\n    UpdateScore\r\n} from \"../../Common/Services/UpdateScore\";\r\n\r\nconst ScoreView = () => {\r\n\r\n        const [score, setScore] = useState(0);\r\n\r\n        useEffect(() => {\r\n    \r\n            // calls and returns promises from service calls for each category\r\n            Promise.all([TestResponse(\"authors\"), TestResponse(\"artists\"), TestResponse(\"historicals\")]).then((results) => {\r\n                console.log(results)\r\n                if (typeof results !== \"undefined\") {\r\n                    // filters user response objects into categories\r\n                    let artistsScore = results.filter(result => result.attributes.category === \"artists\")\r\n                    let authorsScore = results.filter(result => result.attributes.category === \"authors\")\r\n                    let historicalsScore = results.filter(result => result.attributes.category === \"historicals\")\r\n\r\n                    // calculates user score\r\n                    let scoreTot = 0;\r\n                    if (artistsScore[0].attributes.response === \"Vincent Van Gogh\"){\r\n                        scoreTot += 1;\r\n                    }\r\n                    if (authorsScore[0].attributes.response === \"Hunter S. Thompson\"){\r\n                        scoreTot += 1;\r\n                    }\r\n                    if (historicalsScore[0].attributes.response === \"Agamemnon\"){\r\n                        scoreTot += 1;\r\n                    }\r\n\r\n                    setScore(scoreTot)\r\n\r\n                    console.log(\"scoreTot\")\r\n                    console.log(scoreTot)\r\n\r\n                    // calls service to update user score\r\n                    UpdateScore(scoreTot).then((result) => {\r\n                        console.log(result)\r\n                    });\r\n\r\n                    // calls service to create new user score object\r\n                    return createUserScore(scoreTot).then((userScore) => {\r\n                        console.log(\"userScore\")\r\n                        console.log(userScore)\r\n                        return userScore\r\n                    });\r\n                }\r\n            });\r\n    \r\n        }, []);\r\n      \r\n        return (\r\n        <div>\r\n            <h1 className=\"head\">Score</h1>\r\n            <h1>{score}</h1>\r\n        </div>\r\n        );\r\n      };\r\n      \r\n      export default ScoreView;"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,YADF,QAEO,mCAFP;AAGA,SACIC,eADJ,QAEO,oCAFP;AAGA,SACIC,WADJ,QAEO,mCAFP;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;EAAA,gBAEUJ,QAAQ,CAAC,CAAD,CAFlB;EAAA;EAAA,IAETK,KAFS;EAAA,IAEFC,QAFE;;EAIhBP,SAAS,CAAC,YAAM;IAEZ;IACAQ,OAAO,CAACC,GAAR,CAAY,CAACP,YAAY,CAAC,SAAD,CAAb,EAA0BA,YAAY,CAAC,SAAD,CAAtC,EAAmDA,YAAY,CAAC,aAAD,CAA/D,CAAZ,EAA6FQ,IAA7F,CAAkG,UAACC,OAAD,EAAa;MAC3GC,OAAO,CAACC,GAAR,CAAYF,OAAZ;;MACA,IAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;QAChC;QACA,IAAIG,YAAY,GAAGH,OAAO,CAACI,MAAR,CAAe,UAAAC,MAAM;UAAA,OAAIA,MAAM,CAACC,UAAP,CAAkBC,QAAlB,KAA+B,SAAnC;QAAA,CAArB,CAAnB;QACA,IAAIC,YAAY,GAAGR,OAAO,CAACI,MAAR,CAAe,UAAAC,MAAM;UAAA,OAAIA,MAAM,CAACC,UAAP,CAAkBC,QAAlB,KAA+B,SAAnC;QAAA,CAArB,CAAnB;QACA,IAAIE,gBAAgB,GAAGT,OAAO,CAACI,MAAR,CAAe,UAAAC,MAAM;UAAA,OAAIA,MAAM,CAACC,UAAP,CAAkBC,QAAlB,KAA+B,aAAnC;QAAA,CAArB,CAAvB,CAJgC,CAMhC;;QACA,IAAIG,QAAQ,GAAG,CAAf;;QACA,IAAIP,YAAY,CAAC,CAAD,CAAZ,CAAgBG,UAAhB,CAA2BK,QAA3B,KAAwC,kBAA5C,EAA+D;UAC3DD,QAAQ,IAAI,CAAZ;QACH;;QACD,IAAIF,YAAY,CAAC,CAAD,CAAZ,CAAgBF,UAAhB,CAA2BK,QAA3B,KAAwC,oBAA5C,EAAiE;UAC7DD,QAAQ,IAAI,CAAZ;QACH;;QACD,IAAID,gBAAgB,CAAC,CAAD,CAAhB,CAAoBH,UAApB,CAA+BK,QAA/B,KAA4C,WAAhD,EAA4D;UACxDD,QAAQ,IAAI,CAAZ;QACH;;QAEDd,QAAQ,CAACc,QAAD,CAAR;QAEAT,OAAO,CAACC,GAAR,CAAY,UAAZ;QACAD,OAAO,CAACC,GAAR,CAAYQ,QAAZ,EArBgC,CAuBhC;;QACAjB,WAAW,CAACiB,QAAD,CAAX,CAAsBX,IAAtB,CAA2B,UAACM,MAAD,EAAY;UACnCJ,OAAO,CAACC,GAAR,CAAYG,MAAZ;QACH,CAFD,EAxBgC,CA4BhC;;QACA,OAAOb,eAAe,CAACkB,QAAD,CAAf,CAA0BX,IAA1B,CAA+B,UAACa,SAAD,EAAe;UACjDX,OAAO,CAACC,GAAR,CAAY,WAAZ;UACAD,OAAO,CAACC,GAAR,CAAYU,SAAZ;UACA,OAAOA,SAAP;QACH,CAJM,CAAP;MAKH;IACJ,CArCD;EAuCH,CA1CQ,EA0CN,EA1CM,CAAT;EA4CA,oBACA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAI,SAAS,EAAC,MAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WADJ,eAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKjB,KAAL,CAFJ,CADA;AAMD,CAtDP;;AAwDM,eAAeD,SAAf"},"metadata":{},"sourceType":"module"}