{"ast":null,"code":"var global = require('../internals/global');\n\nvar fails = require('../internals/fails');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = require('../internals/to-string');\n\nvar trim = require('../internals/string-trim').trim;\n\nvar whitespaces = require('../internals/whitespaces');\n\nvar $parseInt = global.parseInt;\nvar Symbol = global.Symbol;\nvar ITERATOR = Symbol && Symbol.iterator;\nvar hex = /^[+-]?0x/i;\nvar exec = uncurryThis(hex.exec);\nvar FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22 // MS Edge 18- broken with boxed symbols\n|| ITERATOR && !fails(function () {\n  $parseInt(Object(ITERATOR));\n}); // `parseInt` method\n// https://tc39.es/ecma262/#sec-parseint-string-radix\n\nmodule.exports = FORCED ? function parseInt(string, radix) {\n  var S = trim(toString(string));\n  return $parseInt(S, radix >>> 0 || (exec(hex, S) ? 16 : 10));\n} : $parseInt;","map":{"version":3,"names":["global","require","fails","uncurryThis","toString","trim","whitespaces","$parseInt","parseInt","Symbol","ITERATOR","iterator","hex","exec","FORCED","Object","module","exports","string","radix","S"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/node_modules/core-js-pure/internals/number-parse-int.js"],"sourcesContent":["var global = require('../internals/global');\r\nvar fails = require('../internals/fails');\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar toString = require('../internals/to-string');\r\nvar trim = require('../internals/string-trim').trim;\r\nvar whitespaces = require('../internals/whitespaces');\r\n\r\nvar $parseInt = global.parseInt;\r\nvar Symbol = global.Symbol;\r\nvar ITERATOR = Symbol && Symbol.iterator;\r\nvar hex = /^[+-]?0x/i;\r\nvar exec = uncurryThis(hex.exec);\r\nvar FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22\r\n  // MS Edge 18- broken with boxed symbols\r\n  || (ITERATOR && !fails(function () { $parseInt(Object(ITERATOR)); }));\r\n\r\n// `parseInt` method\r\n// https://tc39.es/ecma262/#sec-parseint-string-radix\r\nmodule.exports = FORCED ? function parseInt(string, radix) {\r\n  var S = trim(toString(string));\r\n  return $parseInt(S, (radix >>> 0) || (exec(hex, S) ? 16 : 10));\r\n} : $parseInt;\r\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,oBAAD,CAAnB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,0BAAD,CAAP,CAAoCI,IAA/C;;AACA,IAAIC,WAAW,GAAGL,OAAO,CAAC,0BAAD,CAAzB;;AAEA,IAAIM,SAAS,GAAGP,MAAM,CAACQ,QAAvB;AACA,IAAIC,MAAM,GAAGT,MAAM,CAACS,MAApB;AACA,IAAIC,QAAQ,GAAGD,MAAM,IAAIA,MAAM,CAACE,QAAhC;AACA,IAAIC,GAAG,GAAG,WAAV;AACA,IAAIC,IAAI,GAAGV,WAAW,CAACS,GAAG,CAACC,IAAL,CAAtB;AACA,IAAIC,MAAM,GAAGP,SAAS,CAACD,WAAW,GAAG,IAAf,CAAT,KAAkC,CAAlC,IAAuCC,SAAS,CAACD,WAAW,GAAG,MAAf,CAAT,KAAoC,EAA3E,CACX;AADW,GAEPI,QAAQ,IAAI,CAACR,KAAK,CAAC,YAAY;EAAEK,SAAS,CAACQ,MAAM,CAACL,QAAD,CAAP,CAAT;AAA8B,CAA7C,CAFxB,C,CAIA;AACA;;AACAM,MAAM,CAACC,OAAP,GAAiBH,MAAM,GAAG,SAASN,QAAT,CAAkBU,MAAlB,EAA0BC,KAA1B,EAAiC;EACzD,IAAIC,CAAC,GAAGf,IAAI,CAACD,QAAQ,CAACc,MAAD,CAAT,CAAZ;EACA,OAAOX,SAAS,CAACa,CAAD,EAAKD,KAAK,KAAK,CAAX,KAAkBN,IAAI,CAACD,GAAD,EAAMQ,CAAN,CAAJ,GAAe,EAAf,GAAoB,EAAtC,CAAJ,CAAhB;AACD,CAHsB,GAGnBb,SAHJ"},"metadata":{},"sourceType":"script"}