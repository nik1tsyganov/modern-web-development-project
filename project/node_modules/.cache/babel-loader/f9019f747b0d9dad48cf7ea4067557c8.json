{"ast":null,"code":"import Parse from 'parse';\nexport const addFriend = async friend => {\n  // This is so that the Creating: ... is displayed in the console and the user can see his/her input is recorded\n  var currentUser = Parse.User.current();\n  var username = currentUser.attributes.username;\n  const UserClass = Parse.Object.extend(\"User\");\n  let query1 = new Parse.Query(UserClass);\n  let query2 = new Parse.Query(UserClass); // add query testing if user exists with that username\n\n  query1.equalTo(\"username\", username);\n  query2.equalTo(\"username\", friend);\n\n  query2._andQuery([query1]);\n\n  let user = await query2.first();\n  console.log(\"user\");\n  console.log(user);\n  let friends = [];\n\n  if (typeof user == 'string') {\n    console.log(\"string\");\n\n    if (user[0].attributes.username === username) {\n      friends = user[0].attributes.friendsList;\n    } else if (user[1].attributes.username === username) {\n      friends = user[1].attributes.friendsList;\n    }\n  }\n\n  if (typeof friends !== 'undefined') {\n    friends.push(friend);\n    console.log(\"hehehehe\");\n  } else {\n    friends = [friend];\n    console.log(\"hahahaha\");\n  }\n\n  console.log(\"friends\");\n  console.log(friends);\n  currentUser.set(\"friendsList\", friends);\n  return currentUser.save().then(result => {\n    return result;\n  });\n};","map":{"version":3,"names":["Parse","addFriend","friend","currentUser","User","current","username","attributes","UserClass","Object","extend","query1","Query","query2","equalTo","_andQuery","user","first","console","log","friends","friendsList","push","set","save","then","result"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/src/Common/Services/AddFriend.js"],"sourcesContent":["import Parse from 'parse';\r\n\r\nexport const addFriend = async (friend) => {\r\n    // This is so that the Creating: ... is displayed in the console and the user can see his/her input is recorded\r\n\r\n    var currentUser = Parse.User.current();\r\n\r\n    var username = currentUser.attributes.username;\r\n\r\n    const UserClass = Parse.Object.extend(\"User\")\r\n\r\n    let query1 = new Parse.Query(UserClass);\r\n    let query2 = new Parse.Query(UserClass);\r\n\r\n    // add query testing if user exists with that username\r\n    query1.equalTo(\"username\", username)\r\n    query2.equalTo(\"username\", friend)\r\n    query2._andQuery([query1])\r\n\r\n    let user = await query2.first()\r\n    console.log(\"user\")\r\n    console.log(user)\r\n\r\n    let friends = []\r\n\r\n    if (typeof user == 'string') {\r\n        console.log(\"string\")\r\n        if (user[0].attributes.username === username){\r\n            friends = user[0].attributes.friendsList\r\n        }\r\n        else if (user[1].attributes.username === username){\r\n            friends = user[1].attributes.friendsList\r\n        }\r\n    }\r\n\r\n    if (typeof friends !== 'undefined') {\r\n        friends.push(friend)\r\n        console.log(\"hehehehe\")\r\n    }\r\n    else {\r\n        friends = [friend]\r\n        console.log(\"hahahaha\")\r\n    }\r\n    \r\n    console.log(\"friends\")\r\n    console.log(friends)\r\n    currentUser.set(\"friendsList\", friends);\r\n    \r\n    return currentUser.save().then((result) => {\r\n        return result;\r\n    });\r\n  };"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,MAAP,IAAkB;EACvC;EAEA,IAAIC,WAAW,GAAGH,KAAK,CAACI,IAAN,CAAWC,OAAX,EAAlB;EAEA,IAAIC,QAAQ,GAAGH,WAAW,CAACI,UAAZ,CAAuBD,QAAtC;EAEA,MAAME,SAAS,GAAGR,KAAK,CAACS,MAAN,CAAaC,MAAb,CAAoB,MAApB,CAAlB;EAEA,IAAIC,MAAM,GAAG,IAAIX,KAAK,CAACY,KAAV,CAAgBJ,SAAhB,CAAb;EACA,IAAIK,MAAM,GAAG,IAAIb,KAAK,CAACY,KAAV,CAAgBJ,SAAhB,CAAb,CAVuC,CAYvC;;EACAG,MAAM,CAACG,OAAP,CAAe,UAAf,EAA2BR,QAA3B;EACAO,MAAM,CAACC,OAAP,CAAe,UAAf,EAA2BZ,MAA3B;;EACAW,MAAM,CAACE,SAAP,CAAiB,CAACJ,MAAD,CAAjB;;EAEA,IAAIK,IAAI,GAAG,MAAMH,MAAM,CAACI,KAAP,EAAjB;EACAC,OAAO,CAACC,GAAR,CAAY,MAAZ;EACAD,OAAO,CAACC,GAAR,CAAYH,IAAZ;EAEA,IAAII,OAAO,GAAG,EAAd;;EAEA,IAAI,OAAOJ,IAAP,IAAe,QAAnB,EAA6B;IACzBE,OAAO,CAACC,GAAR,CAAY,QAAZ;;IACA,IAAIH,IAAI,CAAC,CAAD,CAAJ,CAAQT,UAAR,CAAmBD,QAAnB,KAAgCA,QAApC,EAA6C;MACzCc,OAAO,GAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQT,UAAR,CAAmBc,WAA7B;IACH,CAFD,MAGK,IAAIL,IAAI,CAAC,CAAD,CAAJ,CAAQT,UAAR,CAAmBD,QAAnB,KAAgCA,QAApC,EAA6C;MAC9Cc,OAAO,GAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQT,UAAR,CAAmBc,WAA7B;IACH;EACJ;;EAED,IAAI,OAAOD,OAAP,KAAmB,WAAvB,EAAoC;IAChCA,OAAO,CAACE,IAAR,CAAapB,MAAb;IACAgB,OAAO,CAACC,GAAR,CAAY,UAAZ;EACH,CAHD,MAIK;IACDC,OAAO,GAAG,CAAClB,MAAD,CAAV;IACAgB,OAAO,CAACC,GAAR,CAAY,UAAZ;EACH;;EAEDD,OAAO,CAACC,GAAR,CAAY,SAAZ;EACAD,OAAO,CAACC,GAAR,CAAYC,OAAZ;EACAjB,WAAW,CAACoB,GAAZ,CAAgB,aAAhB,EAA+BH,OAA/B;EAEA,OAAOjB,WAAW,CAACqB,IAAZ,GAAmBC,IAAnB,CAAyBC,MAAD,IAAY;IACvC,OAAOA,MAAP;EACH,CAFM,CAAP;AAGD,CAjDI"},"metadata":{},"sourceType":"module"}