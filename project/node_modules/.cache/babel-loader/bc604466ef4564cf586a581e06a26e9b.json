{"ast":null,"code":"'use strict';\n\nvar call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar isCallable = require('../internals/is-callable');\n\nvar anObject = require('../internals/an-object');\n\nvar $TypeError = TypeError; // `Map.prototype.upsert` method\n// https://github.com/thumbsupep/proposal-upsert\n\nmodule.exports = function upsert(key, updateFn\n/* , insertFn */\n) {\n  var map = anObject(this);\n  var get = aCallable(map.get);\n  var has = aCallable(map.has);\n  var set = aCallable(map.set);\n  var insertFn = arguments.length > 2 ? arguments[2] : undefined;\n  var value;\n\n  if (!isCallable(updateFn) && !isCallable(insertFn)) {\n    throw $TypeError('At least one callback required');\n  }\n\n  if (call(has, map, key)) {\n    value = call(get, map, key);\n\n    if (isCallable(updateFn)) {\n      value = updateFn(value);\n      call(set, map, key, value);\n    }\n  } else if (isCallable(insertFn)) {\n    value = insertFn();\n    call(set, map, key, value);\n  }\n\n  return value;\n};","map":null,"metadata":{},"sourceType":"script"}