{"ast":null,"code":"import _slicedToArray from \"/Users/NikitaMac/Desktop/Modern Web Development/Homework/modern-web-development-project/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/NikitaMac/Desktop/Modern Web Development/Homework/modern-web-development-project/project/src/Components/Comments/Comment.js\";\n\nimport CommentForm from \"./CommentForm\";\nimport React from \"react\";\n\nvar Comment = function Comment(_ref) {\n  var comment = _ref.comment,\n      replies = _ref.replies,\n      getReplies = _ref.getReplies,\n      setActiveComment = _ref.setActiveComment,\n      activeComment = _ref.activeComment,\n      currentUser = _ref.currentUser,\n      _ref$filteredIds = _ref.filteredIds,\n      filteredIds = _ref$filteredIds === void 0 ? [] : _ref$filteredIds,\n      _ref$reduxWord = _ref.reduxWord,\n      reduxWord = _ref$reduxWord === void 0 ? \"\" : _ref$reduxWord,\n      updateComment = _ref.updateComment,\n      deleteComment = _ref.deleteComment,\n      addComment = _ref.addComment,\n      _ref$usersForMention = _ref.usersForMention,\n      usersForMention = _ref$usersForMention === void 0 ? [] : _ref$usersForMention;\n\n  var _useState = useState(comment.attributes.body),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var isTextareaDisabled = text.length === 0; // Checks if the comment or reply is being editted and checks the activeComment type \n\n  var isEditing = activeComment && activeComment.id === comment.id && activeComment.type === \"editing\"; // Checks if the comment can be replied to or is being replied to\n\n  var isReplying = activeComment && activeComment.id === comment.id && activeComment.type === \"replying\"; // Following const values are needed to check for deletion, replying, and editting the comments in the list view\n\n  var canDelete = currentUser.id === comment.attributes.userId && replies.length === 0;\n  var canReply = Boolean(currentUser.id);\n  var canEdit = currentUser.id === comment.attributes.userId;\n  var createdAt = new Date(comment.attributes.createdAt).toLocaleDateString();\n\n  var onChangeText = function onChangeText(e) {\n    return setText(e.target.value);\n  };\n\n  var onSubmitEdit = function onSubmitEdit(e) {\n    e.preventDefault();\n    updateComment(comment.id, text);\n    setText(\"\");\n  };\n\n  var onSubmitReply = function onSubmitReply(e) {\n    e.preventDefault();\n    addComment(text, currentUser.id, comment.id, currentUser.attributes.username);\n    setText(\"\");\n  };\n\n  return (\n    /*#__PURE__*/\n    // Each comment has three various actions such as edit, delete, and reply\n    // Before doing any of those activities the code checks if the flags are set correctlly \n    // The basic attributes such as username, when created, and body of the comment is always displayed\n    React.createElement(\"div\", {\n      key: comment.id,\n      className: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-stretch\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-author\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, comment.attributes.username), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-date\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, createdAt)), !isEditing && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, comment.attributes.body), isEditing && /*#__PURE__*/React.createElement(CommentForm, {\n      onSubmit: onSubmitEdit,\n      submitLabel: \"Update\",\n      hasCancelButton: true,\n      onChangeText: onChangeText,\n      initialText: comment.attributes.body,\n      handleSubmit: function handleSubmit(text) {\n        return updateComment(comment.id, text);\n      },\n      handleCancel: function handleCancel() {\n        return setActiveComment(null);\n      },\n      usersForMention: usersForMention,\n      currentUser: currentUser,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-actions\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, canReply && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-reply\",\n      onClick: function onClick() {\n        return setActiveComment({\n          id: comment.id,\n          type: \"replying\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Reply\"), canEdit && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-edit\",\n      onClick: function onClick() {\n        return setActiveComment({\n          id: comment.id,\n          type: \"editing\"\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Edit\"), canDelete && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment-delete\",\n      onClick: function onClick() {\n        return deleteComment(comment.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Delete\")), isReplying && /*#__PURE__*/React.createElement(CommentForm, {\n      onSubmit: onSubmitReply,\n      submitLabel: \"Reply\",\n      handleSubmit: function handleSubmit(text) {\n        return addComment(text, currentUser.id, comment.id, currentUser.attributes.username);\n      },\n      usersForMention: usersForMention,\n      currentUser: currentUser,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), replies.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"replies\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, replies.map(function (reply) {\n      return filteredIds.includes(reply.id) || reduxWord === \"\" ? /*#__PURE__*/React.createElement(Comment, {\n        comment: reply,\n        key: reply.id,\n        setActiveComment: setActiveComment,\n        activeComment: activeComment,\n        currentUser: currentUser,\n        filteredIds: filteredIds,\n        reduxWord: reduxWord,\n        updateComment: updateComment,\n        deleteComment: deleteComment,\n        addComment: addComment,\n        getReplies: getReplies,\n        replies: getReplies(reply.id),\n        usersForMention: usersForMention,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null);\n    }))))\n  );\n};\n\nexport default Comment;","map":{"version":3,"names":["CommentForm","React","Comment","comment","replies","getReplies","setActiveComment","activeComment","currentUser","filteredIds","reduxWord","updateComment","deleteComment","addComment","usersForMention","useState","attributes","body","text","setText","isTextareaDisabled","length","isEditing","id","type","isReplying","canDelete","userId","canReply","Boolean","canEdit","createdAt","Date","toLocaleDateString","onChangeText","e","target","value","onSubmitEdit","preventDefault","onSubmitReply","username","map","reply","includes"],"sources":["/Users/NikitaMac/Desktop/Modern Web Development/Homework/modern-web-development-project/project/src/Components/Comments/Comment.js"],"sourcesContent":["import CommentForm from \"./CommentForm\";\nimport React from \"react\";\n\nconst Comment = ({\n  comment,\n  replies,\n  getReplies,\n  setActiveComment,\n  activeComment,\n  currentUser,\n  filteredIds = [],\n  reduxWord = \"\",\n  updateComment,\n  deleteComment,\n  addComment,\n  usersForMention = []\n}) => {\n\n  const [text, setText] = useState(comment.attributes.body);\n  const isTextareaDisabled = text.length === 0;\n\n  // Checks if the comment or reply is being editted and checks the activeComment type \n  const isEditing = activeComment && activeComment.id === comment.id && activeComment.type === \"editing\";\n\n  // Checks if the comment can be replied to or is being replied to\n  const isReplying = activeComment && activeComment.id === comment.id && activeComment.type === \"replying\";\n\n  // Following const values are needed to check for deletion, replying, and editting the comments in the list view\n  const canDelete = currentUser.id === comment.attributes.userId && replies.length === 0;\n  const canReply = Boolean(currentUser.id);\n  const canEdit = currentUser.id === comment.attributes.userId;\n  const createdAt = new Date(comment.attributes.createdAt).toLocaleDateString();\n\n  const onChangeText = (e) => setText(e.target.value);\n\n  const onSubmitEdit = (e) => {\n    e.preventDefault();\n    updateComment(comment.id, text);\n    setText(\"\");\n  };\n\n  const onSubmitReply = (e) => {\n    e.preventDefault();\n    addComment(text, currentUser.id, comment.id, currentUser.attributes.username);\n    setText(\"\");\n  };\n\n  return (\n    // Each comment has three various actions such as edit, delete, and reply\n    // Before doing any of those activities the code checks if the flags are set correctlly \n    // The basic attributes such as username, when created, and body of the comment is always displayed\n    <div key={comment.id} className=\"comment\">\n      <div className=\"comment-stretch\">\n        <div className=\"comment-content\">\n          <div className=\"comment-author\">{comment.attributes.username}</div>\n          <div className=\"comment-date\">{createdAt}</div>\n        </div>\n\n        {!isEditing && \n          <div className=\"comment-text\">{comment.attributes.body}</div>}\n        \n        {/*  If the comment is being editted it utilizes the updateComment service and uses the comment Form*/}\n        {/* Checking the flag is very important here  */}\n        {/* Editting has features such as using the cancel button and in addition can leave the initial text\n        of the comment. The editted comment is can also use mentions */}\n        {isEditing && (\n          <CommentForm\n            onSubmit={onSubmitEdit}\n            submitLabel=\"Update\"\n            hasCancelButton\n            onChangeText={onChangeText}\n            initialText={comment.attributes.body}\n            handleSubmit={(text) => updateComment(comment.id, text)}\n            handleCancel={() => setActiveComment(null)}\n            usersForMention={usersForMention}\n            currentUser={currentUser}\n          />\n        )}\n        \n        {/* Below are three actions that all set the current active comment unless comment is deleated */}\n        <div className=\"comment-actions\">\n          {/* Sets the active comment to the current one and thus the state variable */}\n          {canReply && (\n            <div\n              className=\"comment-reply\"\n              onClick={() => setActiveComment({ id: comment.id, type: \"replying\" })}\n            >Reply\n            </div>\n          )}\n\n          {/* Any comment can be editted if it belongs to the current user and it sets the active comment with a certain type */}\n          {canEdit && (\n            <div\n              className=\"comment-edit\"\n              onClick={() => setActiveComment({ id: comment.id, type: \"editing\" })}\n            >Edit\n            </div>\n          )}\n          \n          {/* A comment can only be delitted if belongs to the current user and it has no replies */}\n          {canDelete && (\n            <div\n              className=\"comment-delete\"\n              onClick={() => deleteComment(comment.id)}\n            >Delete\n            </div>\n          )}\n\n        </div>\n\n        {/* Checks if the current comment is being replied to */}\n        {/* It than creates a new comment with a parent id that is always equal to the current id of the comment \n        as this allows it to become a parent to the reply comment. The parentId is only needed for replies since\n        root comments never have parents == null as parentId*/}\n        {isReplying && (\n          <CommentForm\n            onSubmit={onSubmitReply}\n            submitLabel=\"Reply\"\n            handleSubmit={(text) => addComment(text, currentUser.id, comment.id, currentUser.attributes.username)}\n            usersForMention={usersForMention}\n            currentUser={currentUser}\n          />\n        )}\n\n        {/* Iterates over all the replies that were obtained from each rootComment and displays them and so on */}\n        {/* Despite filtering not working on root comments but when a word being searched matches the rootComment it won't display\n        all the replies and will just isolate the root on its own and the replies that have the same word in its body */}\n        {replies.length > 0 && (\n          <div className=\"replies\">\n            {replies.map((reply) => (\n              (filteredIds.includes(reply.id) || (reduxWord === \"\")) ? \n              <Comment\n                comment={reply}\n                key={reply.id}\n                setActiveComment={setActiveComment}\n                activeComment={activeComment}\n                currentUser={currentUser}\n                filteredIds={filteredIds}\n                reduxWord={reduxWord}\n                updateComment={updateComment}\n                deleteComment={deleteComment}\n                addComment={addComment}\n                getReplies={getReplies}\n                replies={getReplies(reply.id)}\n                usersForMention={usersForMention}\n              />\n              : <></>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;"],"mappings":"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"},"metadata":{},"sourceType":"module"}