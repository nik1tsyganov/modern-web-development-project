{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar call = require('../internals/function-call');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar aCallable = require('../internals/a-callable');\n\nvar getIterator = require('../internals/get-iterator');\n\nvar iterate = require('../internals/iterate');\n\nvar push = uncurryThis([].push); // `Map.groupBy` method\n// https://github.com/tc39/proposal-collection-methods\n\n$({\n  target: 'Map',\n  stat: true,\n  forced: true\n}, {\n  groupBy: function groupBy(iterable, keyDerivative) {\n    aCallable(keyDerivative);\n    var iterator = getIterator(iterable);\n    var newMap = new this();\n    var has = aCallable(newMap.has);\n    var get = aCallable(newMap.get);\n    var set = aCallable(newMap.set);\n    iterate(iterator, function (element) {\n      var derivedKey = keyDerivative(element);\n      if (!call(has, newMap, derivedKey)) call(set, newMap, derivedKey, [element]);else push(call(get, newMap, derivedKey), element);\n    }, {\n      IS_ITERATOR: true\n    });\n    return newMap;\n  }\n});","map":{"version":3,"names":["$","require","call","uncurryThis","aCallable","getIterator","iterate","push","target","stat","forced","groupBy","iterable","keyDerivative","iterator","newMap","has","get","set","element","derivedKey","IS_ITERATOR"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/node_modules/core-js-pure/modules/esnext.map.group-by.js"],"sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar call = require('../internals/function-call');\r\nvar uncurryThis = require('../internals/function-uncurry-this');\r\nvar aCallable = require('../internals/a-callable');\r\nvar getIterator = require('../internals/get-iterator');\r\nvar iterate = require('../internals/iterate');\r\n\r\nvar push = uncurryThis([].push);\r\n\r\n// `Map.groupBy` method\r\n// https://github.com/tc39/proposal-collection-methods\r\n$({ target: 'Map', stat: true, forced: true }, {\r\n  groupBy: function groupBy(iterable, keyDerivative) {\r\n    aCallable(keyDerivative);\r\n    var iterator = getIterator(iterable);\r\n    var newMap = new this();\r\n    var has = aCallable(newMap.has);\r\n    var get = aCallable(newMap.get);\r\n    var set = aCallable(newMap.set);\r\n    iterate(iterator, function (element) {\r\n      var derivedKey = keyDerivative(element);\r\n      if (!call(has, newMap, derivedKey)) call(set, newMap, derivedKey, [element]);\r\n      else push(call(get, newMap, derivedKey), element);\r\n    }, { IS_ITERATOR: true });\r\n    return newMap;\r\n  }\r\n});\r\n"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,2BAAD,CAAzB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,sBAAD,CAArB;;AAEA,IAAIM,IAAI,GAAGJ,WAAW,CAAC,GAAGI,IAAJ,CAAtB,C,CAEA;AACA;;AACAP,CAAC,CAAC;EAAEQ,MAAM,EAAE,KAAV;EAAiBC,IAAI,EAAE,IAAvB;EAA6BC,MAAM,EAAE;AAArC,CAAD,EAA8C;EAC7CC,OAAO,EAAE,SAASA,OAAT,CAAiBC,QAAjB,EAA2BC,aAA3B,EAA0C;IACjDT,SAAS,CAACS,aAAD,CAAT;IACA,IAAIC,QAAQ,GAAGT,WAAW,CAACO,QAAD,CAA1B;IACA,IAAIG,MAAM,GAAG,IAAI,IAAJ,EAAb;IACA,IAAIC,GAAG,GAAGZ,SAAS,CAACW,MAAM,CAACC,GAAR,CAAnB;IACA,IAAIC,GAAG,GAAGb,SAAS,CAACW,MAAM,CAACE,GAAR,CAAnB;IACA,IAAIC,GAAG,GAAGd,SAAS,CAACW,MAAM,CAACG,GAAR,CAAnB;IACAZ,OAAO,CAACQ,QAAD,EAAW,UAAUK,OAAV,EAAmB;MACnC,IAAIC,UAAU,GAAGP,aAAa,CAACM,OAAD,CAA9B;MACA,IAAI,CAACjB,IAAI,CAACc,GAAD,EAAMD,MAAN,EAAcK,UAAd,CAAT,EAAoClB,IAAI,CAACgB,GAAD,EAAMH,MAAN,EAAcK,UAAd,EAA0B,CAACD,OAAD,CAA1B,CAAJ,CAApC,KACKZ,IAAI,CAACL,IAAI,CAACe,GAAD,EAAMF,MAAN,EAAcK,UAAd,CAAL,EAAgCD,OAAhC,CAAJ;IACN,CAJM,EAIJ;MAAEE,WAAW,EAAE;IAAf,CAJI,CAAP;IAKA,OAAON,MAAP;EACD;AAd4C,CAA9C,CAAD"},"metadata":{},"sourceType":"script"}