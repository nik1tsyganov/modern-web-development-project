{"ast":null,"code":"'use strict';\n\nvar call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar isCallable = require('../internals/is-callable');\n\nvar anObject = require('../internals/an-object');\n\nvar $TypeError = TypeError; // `Map.prototype.upsert` method\n// https://github.com/thumbsupep/proposal-upsert\n\nmodule.exports = function upsert(key, updateFn\n/* , insertFn */\n) {\n  var map = anObject(this);\n  var get = aCallable(map.get);\n  var has = aCallable(map.has);\n  var set = aCallable(map.set);\n  var insertFn = arguments.length > 2 ? arguments[2] : undefined;\n  var value;\n\n  if (!isCallable(updateFn) && !isCallable(insertFn)) {\n    throw $TypeError('At least one callback required');\n  }\n\n  if (call(has, map, key)) {\n    value = call(get, map, key);\n\n    if (isCallable(updateFn)) {\n      value = updateFn(value);\n      call(set, map, key, value);\n    }\n  } else if (isCallable(insertFn)) {\n    value = insertFn();\n    call(set, map, key, value);\n  }\n\n  return value;\n};","map":{"version":3,"names":["call","require","aCallable","isCallable","anObject","$TypeError","TypeError","module","exports","upsert","key","updateFn","map","get","has","set","insertFn","arguments","length","undefined","value"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/node_modules/core-js-pure/internals/map-upsert.js"],"sourcesContent":["'use strict';\r\nvar call = require('../internals/function-call');\r\nvar aCallable = require('../internals/a-callable');\r\nvar isCallable = require('../internals/is-callable');\r\nvar anObject = require('../internals/an-object');\r\n\r\nvar $TypeError = TypeError;\r\n\r\n// `Map.prototype.upsert` method\r\n// https://github.com/thumbsupep/proposal-upsert\r\nmodule.exports = function upsert(key, updateFn /* , insertFn */) {\r\n  var map = anObject(this);\r\n  var get = aCallable(map.get);\r\n  var has = aCallable(map.has);\r\n  var set = aCallable(map.set);\r\n  var insertFn = arguments.length > 2 ? arguments[2] : undefined;\r\n  var value;\r\n  if (!isCallable(updateFn) && !isCallable(insertFn)) {\r\n    throw $TypeError('At least one callback required');\r\n  }\r\n  if (call(has, map, key)) {\r\n    value = call(get, map, key);\r\n    if (isCallable(updateFn)) {\r\n      value = updateFn(value);\r\n      call(set, map, key, value);\r\n    }\r\n  } else if (isCallable(insertFn)) {\r\n    value = insertFn();\r\n    call(set, map, key, value);\r\n  } return value;\r\n};\r\n"],"mappings":"AAAA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAD,CAAtB;;AAEA,IAAII,UAAU,GAAGC,SAAjB,C,CAEA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC;AAAS;AAA9B,EAAgD;EAC/D,IAAIC,GAAG,GAAGR,QAAQ,CAAC,IAAD,CAAlB;EACA,IAAIS,GAAG,GAAGX,SAAS,CAACU,GAAG,CAACC,GAAL,CAAnB;EACA,IAAIC,GAAG,GAAGZ,SAAS,CAACU,GAAG,CAACE,GAAL,CAAnB;EACA,IAAIC,GAAG,GAAGb,SAAS,CAACU,GAAG,CAACG,GAAL,CAAnB;EACA,IAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAArD;EACA,IAAIC,KAAJ;;EACA,IAAI,CAACjB,UAAU,CAACQ,QAAD,CAAX,IAAyB,CAACR,UAAU,CAACa,QAAD,CAAxC,EAAoD;IAClD,MAAMX,UAAU,CAAC,gCAAD,CAAhB;EACD;;EACD,IAAIL,IAAI,CAACc,GAAD,EAAMF,GAAN,EAAWF,GAAX,CAAR,EAAyB;IACvBU,KAAK,GAAGpB,IAAI,CAACa,GAAD,EAAMD,GAAN,EAAWF,GAAX,CAAZ;;IACA,IAAIP,UAAU,CAACQ,QAAD,CAAd,EAA0B;MACxBS,KAAK,GAAGT,QAAQ,CAACS,KAAD,CAAhB;MACApB,IAAI,CAACe,GAAD,EAAMH,GAAN,EAAWF,GAAX,EAAgBU,KAAhB,CAAJ;IACD;EACF,CAND,MAMO,IAAIjB,UAAU,CAACa,QAAD,CAAd,EAA0B;IAC/BI,KAAK,GAAGJ,QAAQ,EAAhB;IACAhB,IAAI,CAACe,GAAD,EAAMH,GAAN,EAAWF,GAAX,EAAgBU,KAAhB,CAAJ;EACD;;EAAC,OAAOA,KAAP;AACH,CApBD"},"metadata":{},"sourceType":"script"}