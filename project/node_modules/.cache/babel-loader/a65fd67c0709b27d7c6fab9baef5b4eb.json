{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n/**\r\n * Copyright (c) 2015-present, Parse, LLC.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @flow\r\n */\n\n\nvar uuidv4 = require('./uuid');\n\nvar iidCache = null;\nvar InstallationController = {\n  currentInstallationId: function currentInstallationId()\n  /*: Promise<string>*/\n  {\n    if (typeof iidCache === 'string') {\n      return _promise.default.resolve(iidCache);\n    }\n\n    var path = _Storage.default.generatePath('installationId');\n\n    return _Storage.default.getItemAsync(path).then(function (iid) {\n      if (!iid) {\n        iid = uuidv4();\n        return _Storage.default.setItemAsync(path, iid).then(function () {\n          iidCache = iid;\n          return iid;\n        });\n      }\n\n      iidCache = iid;\n      return iid;\n    });\n  },\n  _clearCache: function _clearCache() {\n    iidCache = null;\n  },\n  _setInstallationIdCache: function _setInstallationIdCache(iid\n  /*: string*/\n  ) {\n    iidCache = iid;\n  }\n};\nmodule.exports = InstallationController;","map":null,"metadata":{},"sourceType":"script"}