{"ast":null,"code":"import Parse from 'parse';\nexport const TestResponse = category => {\n  var currentUser = Parse.User.current();\n  var username = currentUser.attributes.username;\n  const testResponse = Parse.Object.extend(\"UserResponse\");\n  const query = new Parse.Query(testResponse);\n  query.equalTo('user', username);\n  query.equalTo('category', category);\n  return query.first().then(results => {\n    return results;\n  });\n};\n_c = TestResponse;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestResponse\");","map":{"version":3,"names":["Parse","TestResponse","category","currentUser","User","current","username","attributes","testResponse","Object","extend","query","Query","equalTo","first","then","results"],"sources":["C:/Users/brosk/Documents/Web Dev/modern-web-development-project/project/src/Common/Services/TestService.js"],"sourcesContent":["import Parse from 'parse';\r\n\r\n  export const TestResponse = (category) => {\r\n\r\n    var currentUser = Parse.User.current();\r\n    var username = currentUser.attributes.username;\r\n\r\n    const testResponse = Parse.Object.extend(\"UserResponse\");\r\n    const query = new Parse.Query(testResponse);\r\n\r\n    query.equalTo('user', username);\r\n    query.equalTo('category', category);\r\n\r\n    return query.first().then((results) => {\r\n        return results;\r\n});\r\n};"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEE,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc;EAExC,IAAIC,WAAW,GAAGH,KAAK,CAACI,IAAN,CAAWC,OAAX,EAAlB;EACA,IAAIC,QAAQ,GAAGH,WAAW,CAACI,UAAZ,CAAuBD,QAAtC;EAEA,MAAME,YAAY,GAAGR,KAAK,CAACS,MAAN,CAAaC,MAAb,CAAoB,cAApB,CAArB;EACA,MAAMC,KAAK,GAAG,IAAIX,KAAK,CAACY,KAAV,CAAgBJ,YAAhB,CAAd;EAEAG,KAAK,CAACE,OAAN,CAAc,MAAd,EAAsBP,QAAtB;EACAK,KAAK,CAACE,OAAN,CAAc,UAAd,EAA0BX,QAA1B;EAEA,OAAOS,KAAK,CAACG,KAAN,GAAcC,IAAd,CAAoBC,OAAD,IAAa;IACnC,OAAOA,OAAP;EACP,CAFU,CAAP;AAGH,CAdQ;KAAMf,Y"},"metadata":{},"sourceType":"module"}