{"ast":null,"code":"import _objectSpread from \"/Users/NikitaMac/Desktop/Modern Web Development/Homework/modern-web-development-project/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/NikitaMac/Desktop/Modern Web Development/Homework/modern-web-development-project/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/NikitaMac/Desktop/Modern Web Development/Homework/modern-web-development-project/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/NikitaMac/Desktop/Modern Web Development/Homework/modern-web-development-project/project/src/Components/Comments/CommentList.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport CommentForm from \"./CommentForm\";\nimport Comment from \"./Comment\";\nimport { getComments as getCommentsApi, createComment as createCommentApi, updateComment as updateCommentApi, deleteComment as deleteCommentApi } from \"./../../Common/Services/CommentService\";\n\nvar Comments = function Comments(_ref) {\n  var commentsUrl = _ref.commentsUrl,\n      currentUserId = _ref.currentUserId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      backendComments = _useState2[0],\n      setBackendComments = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeComment = _useState4[0],\n      setActiveComment = _useState4[1];\n\n  var rootComments = backendComments.filter(function (backendComment) {\n    return backendComment.parentId === null;\n  });\n\n  var getReplies = function getReplies(commentId) {\n    return backendComments.filter(function (backendComment) {\n      return backendComment.parentId === commentId;\n    }).sort(function (a, b) {\n      return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n    });\n  };\n\n  var addComment = function addComment(text, parentId) {\n    createCommentApi(text, parentId).then(function (comment) {\n      setBackendComments([comment].concat(_toConsumableArray(backendComments)));\n      setActiveComment(null);\n    });\n  };\n\n  var updateComment = function updateComment(text, commentId) {\n    updateCommentApi(text).then(function () {\n      var updatedBackendComments = backendComments.map(function (backendComment) {\n        if (backendComment.id === commentId) {\n          return _objectSpread({}, backendComment, {\n            body: text\n          });\n        }\n\n        return backendComment;\n      });\n      setBackendComments(updatedBackendComments);\n      setActiveComment(null);\n    });\n  };\n\n  var deleteComment = function deleteComment(commentId) {\n    if (window.confirm(\"Are you sure you want to remove comment?\")) {\n      deleteCommentApi().then(function () {\n        var updatedBackendComments = backendComments.filter(function (backendComment) {\n          return backendComment.id !== commentId;\n        });\n        setBackendComments(updatedBackendComments);\n      });\n    }\n  };\n\n  useEffect(function () {\n    getCommentsApi().then(function (data) {\n      setBackendComments(data);\n    });\n  }, [backendComments]); // console.log(backendComments);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"comments-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-form-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Write comment\"), /*#__PURE__*/React.createElement(CommentForm, {\n    submitLabel: \"Write\",\n    handleSubmit: addComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, rootComments.map(function (rootComment) {\n    return /*#__PURE__*/React.createElement(Comment, {\n      key: rootComment.id,\n      comment: rootComment,\n      replies: getReplies(rootComment.id),\n      activeComment: activeComment,\n      setActiveComment: setActiveComment,\n      addComment: addComment,\n      deleteComment: deleteComment,\n      updateComment: updateComment,\n      currentUserId: currentUserId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\nexport default Comments;","map":{"version":3,"names":["React","useState","useEffect","CommentForm","Comment","getComments","getCommentsApi","createComment","createCommentApi","updateComment","updateCommentApi","deleteComment","deleteCommentApi","Comments","commentsUrl","currentUserId","backendComments","setBackendComments","activeComment","setActiveComment","rootComments","filter","backendComment","parentId","getReplies","commentId","sort","a","b","Date","createdAt","getTime","addComment","text","then","comment","updatedBackendComments","map","id","body","window","confirm","data","rootComment"],"sources":["/Users/NikitaMac/Desktop/Modern Web Development/Homework/modern-web-development-project/project/src/Components/Comments/CommentList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CommentForm from \"./CommentForm\";\nimport Comment from \"./Comment\";\nimport {\n  getComments as getCommentsApi,\n  createComment as createCommentApi,\n  updateComment as updateCommentApi,\n  deleteComment as deleteCommentApi,\n} from \"./../../Common/Services/CommentService\";\n\nconst Comments = ({ commentsUrl, currentUserId }) => {\n  const [backendComments, setBackendComments] = useState([]);\n  const [activeComment, setActiveComment] = useState(null);\n  const rootComments = backendComments.filter(\n    (backendComment) => backendComment.parentId === null\n  );\n\n  const getReplies = (commentId) =>\n    backendComments\n      .filter((backendComment) => backendComment.parentId === commentId)\n      .sort(\n        (a, b) =>\n          new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n      );\n\n  const addComment = (text, parentId) => {\n    createCommentApi(text, parentId).then((comment) => {\n      setBackendComments([comment, ...backendComments]);\n      setActiveComment(null);\n    });\n  };\n\n  const updateComment = (text, commentId) => {\n    updateCommentApi(text).then(() => {\n      const updatedBackendComments = backendComments.map((backendComment) => {\n        if (backendComment.id === commentId) {\n          return { ...backendComment, body: text };\n        }\n        return backendComment;\n      });\n      setBackendComments(updatedBackendComments);\n      setActiveComment(null);\n    });\n  };\n\n  const deleteComment = (commentId) => {\n    if (window.confirm(\"Are you sure you want to remove comment?\")) {\n      deleteCommentApi().then(() => {\n        const updatedBackendComments = backendComments.filter(\n          (backendComment) => backendComment.id !== commentId\n        );\n        setBackendComments(updatedBackendComments);\n      });\n    }\n  };\n\nuseEffect(() => {\n    getCommentsApi().then((data) => {\n        setBackendComments(data);\n    });\n}, [backendComments]);\n\n// console.log(backendComments);\n\n  return (\n    <div className=\"comments\">\n      <h3 className=\"comments-title\">Comments</h3>\n      <div className=\"comment-form-title\">Write comment</div>\n      <CommentForm submitLabel=\"Write\" handleSubmit={addComment} />\n      <div className=\"comments-container\">\n        {rootComments.map((rootComment) => (\n          <Comment\n            key={rootComment.id}\n            comment={rootComment}\n            replies={getReplies(rootComment.id)}\n            activeComment={activeComment}\n            setActiveComment={setActiveComment}\n            addComment={addComment}\n            deleteComment={deleteComment}\n            updateComment={updateComment}\n            currentUserId={currentUserId}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;"],"mappings":"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"},"metadata":{},"sourceType":"module"}